#include <algorithm>
#include <bitset>
#include <cmath>
#include <ctime>
#include <iostream>
#include <list>
#include <map>
#include <math.h>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <stdio.h>
#include <string>
#include <vector>
#define rep(i,n) for(int i = 0; i < (n); i++)
#define all(a) a.begin(),a.end()
using namespace std;
// using ll = long long;
// using P = pair<int,int>;
// using vi = vector<int>;
// using vvi = vector<vi>;




using Graph = vector<vector<int> >;



// 深さ優先探索
vector<int> dire;

void dfs(const Graph &G, int v, int pre) {
  if(dire[v] == 0) dire[v] = pre;
    // v から行ける各頂点 next_v について
    for (auto next_v : G[v]) { 
      if (dire[next_v]) continue; // next_v が探索済だったらスルー
      dfs(G, next_v,v); // 再帰的に探索
    }
}



int main() {
  int N;
  cin >> N;
  for(int i=1; i <= N; i++) {
    cout << i * N << endl;
    rep(i,N) {
      rep(j,N) {
        rep(k,N) {
        }
      }
    }
  }
  return 0;
}



